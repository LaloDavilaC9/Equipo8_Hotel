/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package victor;

import java.awt.Color;
import java.awt.Graphics;

/**
 *
 * @author victo
 */
public class DisponibilidadHabitaciones extends javax.swing.JFrame {

    /**
     * Creates new form DisponibilidadHabitaciones
     */
    public DisponibilidadHabitaciones() {
        initComponents();
        this.setExtendedState(MAXIMIZED_BOTH);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setExtendedState(6);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1920, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1080, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DisponibilidadHabitaciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DisponibilidadHabitaciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DisponibilidadHabitaciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DisponibilidadHabitaciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DisponibilidadHabitaciones().setVisible(true);
            }
        });
    }
    
    public void paint(Graphics g){
        super.paint(g);
        g.setColor(Color.BLACK);
        g.drawLine(75, 50, 1850, 50);
        g.drawLine(75, 50, 200, 600000);
        int moverDerechaPuerta = 100;
        int moverDerechaCirculo = 135;
        //Para tercer piso.
        for (int i = 0; i < 15; i++) {
            g.setColor(Color.GREEN);
            g.fillRect(moverDerechaPuerta, 70, 50, 70);
            g.setColor(Color.BLACK);
            g.fillOval(moverDerechaCirculo, 100, 15, 15);
            moverDerechaPuerta += 120;
            moverDerechaCirculo += 120;
            //ipjafdnhPoin
        }
        //Para segundo piso.
        g.setColor(Color.BLACK);
        g.drawLine(75, 175, 1850, 175);
        moverDerechaPuerta = 100;
        moverDerechaCirculo = 135;
        for (int i = 0; i < 15; i++) {
            g.setColor(Color.RED);
            g.fillRect(moverDerechaPuerta, 200, 50, 70);
            g.setColor(Color.BLACK);
            g.fillOval(moverDerechaCirculo, 230, 15, 15);
            moverDerechaPuerta += 120;
            moverDerechaCirculo += 120;
        }
        //Para primer piso.
        g.setColor(Color.BLACK);
        g.drawLine(75, 300, 1850, 300);
        moverDerechaPuerta = 100;
        moverDerechaCirculo = 135;
        for (int i = 0; i < 15; i++) {
            g.setColor(Color.GREEN);
            g.fillRect(moverDerechaPuerta, 330, 50, 70);
            g.setColor(Color.BLACK);
            g.fillOval(moverDerechaCirculo, 360, 15, 15);
            moverDerechaPuerta += 120;
            moverDerechaCirculo += 120;
        }
        g.setColor(Color.BLACK);
        g.drawLine(75, 425, 1850, 425);
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
